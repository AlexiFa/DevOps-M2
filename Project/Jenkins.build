pipeline {
    agent {
        label 'jenkins-slave'
    }

    environment {
        APP_IMAGE = "efrei2023/project-alexah:2001" // Nom et tag de l'image Docker
    }

    stages {
        stage('Cloning Git') {
            steps {
                git branch: 'main', credentialsId: 'github-credentials', url: 'https://github.com/AlexiFa/DevOps-M2'
            }
        }

        stage('Building Application Image') {
            steps {
                script {
                    dir('Project/webapi') {
                        APP_IMAGE = docker.build("${APP_IMAGE}")
                        sh 'sudo docker build -t ${APP_IMAGE} .'
                    }
                }
            }
        }

        stage('Publishing Application Image') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-credentials') {
                        APP_IMAGE.push()
                        sh 'sudo docker push ${APP_IMAGE}
                    }
                }
            }
        }

        stage('Deploy Application') {
            steps {
                dir('Project') {
                    sh 'docker compose up -d' // Remplacez par le fichier compose de votre projet
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully!"
        }
        failure {
            echo "Pipeline failed. Please check the logs."
        }
    }
}
